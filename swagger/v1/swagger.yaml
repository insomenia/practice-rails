---
openapi: 3.0.1
info:
  title: API V1
  version: v1
  description: 인썸니아 프론트엔드 개발자 과제를 위한 백엔드 API 명세 입니다.
paths:
  "/items":
    get:
      summary: 상품 리스트
      tags:
        - 상품(Item)
      responses:
        "200":
          description: items found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  name:
                    type: string
                  list_price:
                    type: integer
                  sale_price:
                    type: integer
                  image_path:
                    type: string
                  category:
                    type: object
                required:
                  - id
  "/items/{id}":
    get:
      summary: 상품 상세정보
      tags:
        - 상품(Item)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: item found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  name:
                    type: string
                  list_price:
                    type: integer
                  sale_price:
                    type: integer
                  image_path:
                    type: string
                  category:
                    type: object
                required:
                  - id
        "404":
          description: item not found
  "/orders":
    post:
      summary: 장바구니 생성
      tags:
        - 장바구니(LineItem)
      parameters: []
      responses:
        "201":
          description: order created
        "422":
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                status:
                  type: string
                  default: cart
              required:
                - user_id
                - status
    get:
      summary: 주문 리스트
      tags:
        - 주문(Order)
      responses:
        "200":
          description: items found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
                  receiver_name:
                    type: string
                  receiver_phone:
                    type: string
                  zipcode:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                required:
                  - id
                  - status
                  - receiver_name
                  - receiver_phone
                  - zipcode
                  - address1
                  - address2
  "/line_items":
    post:
      summary: 장바구니 담기
      tags:
        - 장바구니(LineItem)
      parameters: []
      responses:
        "201":
          description: cart item added
        "422":
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                item_id:
                  type: integer
                quantity:
                  type: integer
              required:
                - user_id
                - item_id
                - quantity
  "/orders/{id}":
    get:
      summary: 주문 상세정보
      tags:
        - 주문(Order)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: order found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
                  receiver_name:
                    type: string
                  receiver_phone:
                    type: string
                  zipcode:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                required:
                  - id
                  - status
                  - receiver_name
                  - receiver_phone
                  - zipcode
                  - address1
                  - address2
        "404":
          description: order not found
    patch:
      summary: 주문하기
      tags:
        - 주문(Order)
      parameters: []
      responses:
        "201":
          description: order complete
        "422":
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                user_id:
                  type: integer
                receiver_name:
                  type: string
                  default: ""
                receiver_phone:
                  type: string
                  default: ""
                zipcode:
                  type: string
                  default: ""
                address1:
                  type: string
                  default: ""
                address2:
                  type: string
                  default: ""
              required:
                - user_id
                - receiver_name
                - receiver_phone
                - zipcode
                - address1
                - address2
  "":
    post:
      servers:
        - url: https://cognito-idp.ap-northeast-2.amazonaws.com
      summary: 사용자 정보 확인
      tags:
        - 사용자
      parameters:
        - name: X-Amz-Target
          in: header
          default: AWSCognitoIdentityProviderService.InitiateAuth
          schema:
            type: string
      responses:
        "200":
          description: user found
      requestBody:
        content:
          application/x-amz-json-1.1:
            schema:
              type: object
              properties:
                AuthFlow:
                  type: string
                  default: USER_PASSWORD_AUTH
                ClientId:
                  type: string
                  default: 7p64rveq2l3fhk9h47mt80vo9u
                AuthParameters:
                  type: object
                  properties:
                    USERNAME:
                      type: string
                      default: ""
                    PASSWORD:
                      type: string
                      default: ""
              required:
                - AuthFlow
                - ClientId
                - USERNAME
                - PASSWORD
  "/":
    post:
      servers:
        - url: https://cognito-idp.ap-northeast-2.amazonaws.com
      summary: 사용자 생성
      tags:
        - 사용자
      parameters:
        - name: X-Amz-Target
          in: header
          default: AWSCognitoIdentityProviderService.SignUp
          schema:
            type: string
      responses:
        "200":
          description: user found
      requestBody:
        content:
          application/x-amz-json-1.1:
            schema:
              type: object
              properties:
                ClientId:
                  type: string
                  default: 7p64rveq2l3fhk9h47mt80vo9u
                Password:
                  type: string
                  default: ""
                Username:
                  type: string
                  default: ""
                UserStatus:
                  type: string
                  default: CONFIRMED
              required:
                - Password
                - ClientId
                - Username
                - UserStatus
servers:
  - url: https://assignment.barber.work
