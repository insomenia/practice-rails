---
openapi: 3.0.1
info:
  title: API V1
  version: v1
  description: 인썸니아 프론트엔드 개발자 과제를 위한 백엔드 API 명세 입니다.
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
paths:
  "/items":
    get:
      summary: 상품 리스트
      tags:
        - 상품(Item)
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          schema:
            type: integer
        - name: q[category_id_eq]
          in: query
          description: 카테고리 아이디
          schema:
            type: string
        - name: q[name_cont]
          in: query
          description: 상품명 검색
          schema:
            type: string
        - name: q[list_price_gteq]
          in: query
          description: 가격 최소값
          schema:
            type: string
        - name: q[list_price_lteq]
          in: query
          description: 가격 최대값
          schema:
            type: string
        - name: q[sale_price_gteq]
          in: query
          description: 할인가격 최소값
          schema:
            type: string
        - name: q[sale_price_lteq]
          in: query
          description: 할인가격 최대값
          schema:
            type: string
        - name: q[created_at_gteq]
          in: query
          description: 생성일 최소값
          schema:
            type: string
        - name: q[created_at_lteq]
          in: query
          description: 생성일 최대값
          schema:
            type: string
        - name: q[s]
          in: query
          description: sort by
          schema:
            enum:
              - list_price desc
              - list_price asc
              - created_at desc
              - created_at asc
      responses:
        "200":
          description: items found
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        category_id:
                          type: integer
                        name:
                          type: string
                        list_price:
                          type: integer
                        sale_price:
                          type: integer
                        image_path:
                          type: string
                        category:
                          type: object
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                            position:
                              type: integer
                            image_path:
                              type: string
                  total_count:
                    type: integer
                required:
                  - id
  "/items/{id}":
    get:
      summary: 상품 상세정보
      tags:
        - 상품(Item)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: item found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  category_id:
                    type: integer
                  name:
                    type: string
                  list_price:
                    type: integer
                  sale_price:
                    type: integer
                  image_path:
                    type: string
                  description:
                    type: string
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        image_path:
                          type: string
                required:
                  - id
        "404":
          description: item not found
  "/cart":
    get:
      summary: 장바구니 조회
      security:
        - Bearer: []
      tags:
        - 주문(Order)
      responses:
        "200":
          description: order found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
                  receiver_name:
                    type: string
                  receiver_phone:
                    type: string
                  zipcode:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                required:
                  - id
                  - status
                  - receiver_name
                  - receiver_phone
                  - zipcode
                  - address1
                  - address2
  "/line_items":
    post:
      summary: 장바구니 추가
      security:
        - Bearer: []
      tags:
        - 주문(Order)
      parameters: []
      responses:
        "200":
          description: create success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  order_id:
                    type: integer
                  quantity:
                    type: integer
                  total:
                    type: integer
                  item_id:
                    type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                item_id:
                  type: integer
  "/orders":
    get:
      summary: 주문 리스트
      security:
        - Bearer: []
      tags:
        - 주문(Order)
      responses:
        "200":
          description: orders found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
                  receiver_name:
                    type: string
                  receiver_phone:
                    type: string
                  zipcode:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                required:
                  - id
                  - status
                  - receiver_name
                  - receiver_phone
                  - zipcode
                  - address1
                  - address2
        "404":
          description: order not found
  "/orders/{id}":
    get:
      summary: 주문 상세정보
      security:
        - Bearer: []
      tags:
        - 주문(Order)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: order found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
                  receiver_name:
                    type: string
                  receiver_phone:
                    type: string
                  zipcode:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                required:
                  - id
                  - status
                  - receiver_name
                  - receiver_phone
                  - zipcode
                  - address1
                  - address2
        "404":
          description: order not found
    patch:
      summary: 주문하기
      security:
        - Bearer: []
      tags:
        - 주문(Order)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: order complete
        "422":
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                receiver_name:
                  type: string
                  default: ""
                receiver_phone:
                  type: string
                  default: ""
                zipcode:
                  type: string
                  default: ""
                address1:
                  type: string
                  default: ""
                address2:
                  type: string
                  default: ""
              required:
                - receiver_name
                - receiver_phone
                - zipcode
                - address1
                - address2
  "/?":
    post:
      summary: Token
      tags:
        - Cognito
      servers:
        - url: https://cognito-idp.ap-northeast-2.amazonaws.com
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: AWSCognitoIdentityProviderService.InitiateAuth
      responses:
        "200":
          description: user found
      requestBody:
        content:
          application/x-amz-json-1.1:
            schema:
              type: object
              properties:
                AuthFlow:
                  type: string
                  default: USER_PASSWORD_AUTH
                ClientId:
                  type: string
                  default: 7p64rveq2l3fhk9h47mt80vo9u
                AuthParameters:
                  type: object
                  properties:
                    USERNAME:
                      type: string
                      default: ""
                    PASSWORD:
                      type: string
                      default: ""
              required:
                - AuthFlow
                - ClientId
                - USERNAME
                - PASSWORD
  "/":
    post:
      servers:
        - url: https://cognito-idp.ap-northeast-2.amazonaws.com
      summary: Sign Up
      tags:
        - Cognito
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: AWSCognitoIdentityProviderService.SignUp
      responses:
        "200":
          description: user found
      requestBody:
        content:
          application/x-amz-json-1.1:
            schema:
              type: object
              properties:
                ClientId:
                  type: string
                  default: 7p64rveq2l3fhk9h47mt80vo9u
                Password:
                  type: string
                  default: ""
                Username:
                  type: string
                  default: ""
              required:
                - Password
                - ClientId
                - Username
servers:
  - url: https://assignment.barber.work
